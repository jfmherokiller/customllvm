// ZCPUInstPrinter.h - Print wasm MCInst to assembly syntax -*- C++ -*-//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
///
/// \file
/// \brief This class prints an ZCPU MCInst to wasm file syntax.
///
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_ZCPU_INSTPRINTER_ZCPUINSTPRINTER_H
#define LLVM_LIB_TARGET_ZCPU_INSTPRINTER_ZCPUINSTPRINTER_H

#include "llvm/ADT/SmallVector.h"
#include "llvm/CodeGen/MachineValueType.h"
#include "llvm/MC/MCInstPrinter.h"

namespace llvm {

class MCSubtargetInfo;

class ZCPUInstPrinter final : public MCInstPrinter {
  uint64_t ControlFlowCounter;
  SmallVector<std::pair<uint64_t, bool>, 0> ControlFlowStack;

public:
  ZCPUInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                         const MCRegisterInfo &MRI);

  void printRegName(raw_ostream &OS, unsigned RegNo) const override;
    void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot,
                   const MCSubtargetInfo &STI) override;

  // Used by tblegen code.
  void printOperand(const MCInst *MI, unsigned OpNo,
                    raw_ostream &O);
  void printZCPUP2AlignOperand(const MCInst *MI, unsigned OpNo,
                                      raw_ostream &O);

  // Autogenerated by tblgen.
  void printInstruction(const MCInst *MI, raw_ostream &O);
  static const char *getRegisterName(unsigned RegNo);
};

namespace ZCPU {

const char *TypeToString(MVT Ty);

} // end namespace ZCPU

} // end namespace llvm

#endif
